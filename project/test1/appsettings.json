{
	"Serilog": { //docs here: https://github.com/serilog/serilog-settings-configuration
		"Using": [ "Serilog.Sinks.Console" ],
		"MinimumLevel": {
			"Default": "Verbose" //Verbose | Debug | Information | Warning | Error | Fatal
			//"Override": {
			//	"Microsoft": "Warning",
			//	"MyApp.Something.Tricky": "Verbose"
			//}
		},
		"WriteTo": [
			{
				"Name": "Console", //docs here: https://github.com/serilog/serilog-sinks-console
				"Args": {
					//"formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",				
					//"theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
					//DEFAULT TEMPLATE: "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}",
					"outputTemplate": "<{Timestamp:HH:mm:ss.fff}> [{Level:u}] {Message:w} <s:{SourceContext}>{NewLine}{Exception}"
				}
			},
			{
				"Name": "Debug",
				"Args": {
					//	//DEFAULT TEMPLATE: "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}",
					"outputTemplate": "<{Timestamp:HH:mm:ss.fff}> [{Level:u}] {Message} <s:{SourceContext}>{NewLine}{Exception}"
				}
			}
		],

		"Enrich": [ "FromLogContext", "WithThreadId" ],

		"Filter": [ //docs here: https://github.com/serilog/serilog-expressions
			{
				"Name": "ByExcluding",
				"Args": {
					"expression": "StartsWith(SourceContext,'Microsoft') and @l in ['Verbose','Debug']" //possible expression vars: https://github.com/serilog/serilog-expressions#properties
				}
			},
			{
				"Name": "ByExcluding",
				"Args": {
					"expression": "StartsWith(SourceContext,'Microsoft.EntityFrameworkCore.Database.Command') and @l in ['Verbose','Debug','Information']" //possible expression vars: https://github.com/serilog/serilog-expressions#properties
				}
			}
			//{
			//	"Name": "ByExcluding",
			//	"Args": {
			//		"expression": "EndsWith(SourceContext,'PoliceApp\\AppScafolding.cs') and @l in ['Verbose']"
			//	}
			//},
		]
	},
	"Logging": {
		"LogLevel": {
			"Default": "Information",
			"Microsoft.AspNetCore": "Warning"
		}
	},
	"NotNot": {
		"Logging": {
			//configure our "NotNot.Logging.AssertOnErrorSink" which runs in DEBUG builds
			//checks are prioritized Ignore > AssertAlways > AssertOnce
			//patterns are regex, and are matched against first the Category, and later the full message
			"AssertOnError": {
				"Ignore": [
					//ignore specific aspnetcore warnings during development
					"^.*\\[WARNING\\] Overriding address.*Microsoft.AspNetCore.Server.Kestrel>$",
					"^.*\\[WARNING\\] HTTP\/. is not enabled for.*Microsoft.AspNetCore.Server.Kestrel>$",
					"^Placeholder$"
				],
				"AssertAlways": [],
				"AssertOnce": [ ".*" ]
			}
		},
		/** default values for NotNot.Utils.Cache.  uses FusionCache internally */
		"Cache": {
			/** default 33 seconds */
			"CustomDurations": {
				"Maybe<GetBalanceResponse>": 10
			},
			//config fusioncache default true
			"IsFailSafeEnabled": true,
			"DurationDefaultSec": 33,
			"DurationMaxFailSafeSec": 77
		}

	}
}
